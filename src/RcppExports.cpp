// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// getQuantileCpp
NumericVector getQuantileCpp(NumericVector& FY, NumericVector& kI, NumericVector& kU);
RcppExport SEXP _ptse_getQuantileCpp(SEXP FYSEXP, SEXP kISEXP, SEXP kUSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector& >::type FY(FYSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type kI(kISEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type kU(kUSEXP);
    rcpp_result_gen = Rcpp::wrap(getQuantileCpp(FY, kI, kU));
    return rcpp_result_gen;
END_RCPP
}
// predCFCpp
NumericVector predCFCpp(NumericMatrix& FY1XWpred, NumericMatrix& QY1XCF, NumericVector& itrY, NumericVector& itrU, NumericVector& weights, int& nGridsFine, int n, int weighted, int discY);
RcppExport SEXP _ptse_predCFCpp(SEXP FY1XWpredSEXP, SEXP QY1XCFSEXP, SEXP itrYSEXP, SEXP itrUSEXP, SEXP weightsSEXP, SEXP nGridsFineSEXP, SEXP nSEXP, SEXP weightedSEXP, SEXP discYSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix& >::type FY1XWpred(FY1XWpredSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type QY1XCF(QY1XCFSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type itrY(itrYSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type itrU(itrUSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type weights(weightsSEXP);
    Rcpp::traits::input_parameter< int& >::type nGridsFine(nGridsFineSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type weighted(weightedSEXP);
    Rcpp::traits::input_parameter< int >::type discY(discYSEXP);
    rcpp_result_gen = Rcpp::wrap(predCFCpp(FY1XWpred, QY1XCF, itrY, itrU, weights, nGridsFine, n, weighted, discY));
    return rcpp_result_gen;
END_RCPP
}
// predQ1Cpp
NumericVector predQ1Cpp(NumericMatrix& FY1Wpred, NumericMatrix& FY0Wpred, NumericVector& itrY, NumericVector& itrU, int& nGridsFine, int n, int discY, int UB);
RcppExport SEXP _ptse_predQ1Cpp(SEXP FY1WpredSEXP, SEXP FY0WpredSEXP, SEXP itrYSEXP, SEXP itrUSEXP, SEXP nGridsFineSEXP, SEXP nSEXP, SEXP discYSEXP, SEXP UBSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix& >::type FY1Wpred(FY1WpredSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type FY0Wpred(FY0WpredSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type itrY(itrYSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type itrU(itrUSEXP);
    Rcpp::traits::input_parameter< int& >::type nGridsFine(nGridsFineSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type discY(discYSEXP);
    Rcpp::traits::input_parameter< int >::type UB(UBSEXP);
    rcpp_result_gen = Rcpp::wrap(predQ1Cpp(FY1Wpred, FY0Wpred, itrY, itrU, nGridsFine, n, discY, UB));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_ptse_getQuantileCpp", (DL_FUNC) &_ptse_getQuantileCpp, 3},
    {"_ptse_predCFCpp", (DL_FUNC) &_ptse_predCFCpp, 9},
    {"_ptse_predQ1Cpp", (DL_FUNC) &_ptse_predQ1Cpp, 8},
    {NULL, NULL, 0}
};

RcppExport void R_init_ptse(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
